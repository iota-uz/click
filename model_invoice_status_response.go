/*
CLICK-PASS-API

API for managing payments and fiscalization with CLICK Pass.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clickapi

import (
	"encoding/json"
)

// checks if the InvoiceStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceStatusResponse{}

// InvoiceStatusResponse struct for InvoiceStatusResponse
type InvoiceStatusResponse struct {
	// Error code
	ErrorCode *int32 `json:"error_code,omitempty"`
	// Error description
	ErrorNote *string `json:"error_note,omitempty"`
	// Invoice status code
	InvoiceStatus *int64 `json:"invoice_status,omitempty"`
	// Status description
	InvoiceStatusNote *string `json:"invoice_status_note,omitempty"`
}

// NewInvoiceStatusResponse instantiates a new InvoiceStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceStatusResponse() *InvoiceStatusResponse {
	this := InvoiceStatusResponse{}
	return &this
}

// NewInvoiceStatusResponseWithDefaults instantiates a new InvoiceStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceStatusResponseWithDefaults() *InvoiceStatusResponse {
	this := InvoiceStatusResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *InvoiceStatusResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceStatusResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *InvoiceStatusResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *InvoiceStatusResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorNote returns the ErrorNote field value if set, zero value otherwise.
func (o *InvoiceStatusResponse) GetErrorNote() string {
	if o == nil || IsNil(o.ErrorNote) {
		var ret string
		return ret
	}
	return *o.ErrorNote
}

// GetErrorNoteOk returns a tuple with the ErrorNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceStatusResponse) GetErrorNoteOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorNote) {
		return nil, false
	}
	return o.ErrorNote, true
}

// HasErrorNote returns a boolean if a field has been set.
func (o *InvoiceStatusResponse) HasErrorNote() bool {
	if o != nil && !IsNil(o.ErrorNote) {
		return true
	}

	return false
}

// SetErrorNote gets a reference to the given string and assigns it to the ErrorNote field.
func (o *InvoiceStatusResponse) SetErrorNote(v string) {
	o.ErrorNote = &v
}

// GetInvoiceStatus returns the InvoiceStatus field value if set, zero value otherwise.
func (o *InvoiceStatusResponse) GetInvoiceStatus() int64 {
	if o == nil || IsNil(o.InvoiceStatus) {
		var ret int64
		return ret
	}
	return *o.InvoiceStatus
}

// GetInvoiceStatusOk returns a tuple with the InvoiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceStatusResponse) GetInvoiceStatusOk() (*int64, bool) {
	if o == nil || IsNil(o.InvoiceStatus) {
		return nil, false
	}
	return o.InvoiceStatus, true
}

// HasInvoiceStatus returns a boolean if a field has been set.
func (o *InvoiceStatusResponse) HasInvoiceStatus() bool {
	if o != nil && !IsNil(o.InvoiceStatus) {
		return true
	}

	return false
}

// SetInvoiceStatus gets a reference to the given int64 and assigns it to the InvoiceStatus field.
func (o *InvoiceStatusResponse) SetInvoiceStatus(v int64) {
	o.InvoiceStatus = &v
}

// GetInvoiceStatusNote returns the InvoiceStatusNote field value if set, zero value otherwise.
func (o *InvoiceStatusResponse) GetInvoiceStatusNote() string {
	if o == nil || IsNil(o.InvoiceStatusNote) {
		var ret string
		return ret
	}
	return *o.InvoiceStatusNote
}

// GetInvoiceStatusNoteOk returns a tuple with the InvoiceStatusNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceStatusResponse) GetInvoiceStatusNoteOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceStatusNote) {
		return nil, false
	}
	return o.InvoiceStatusNote, true
}

// HasInvoiceStatusNote returns a boolean if a field has been set.
func (o *InvoiceStatusResponse) HasInvoiceStatusNote() bool {
	if o != nil && !IsNil(o.InvoiceStatusNote) {
		return true
	}

	return false
}

// SetInvoiceStatusNote gets a reference to the given string and assigns it to the InvoiceStatusNote field.
func (o *InvoiceStatusResponse) SetInvoiceStatusNote(v string) {
	o.InvoiceStatusNote = &v
}

func (o InvoiceStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.ErrorNote) {
		toSerialize["error_note"] = o.ErrorNote
	}
	if !IsNil(o.InvoiceStatus) {
		toSerialize["invoice_status"] = o.InvoiceStatus
	}
	if !IsNil(o.InvoiceStatusNote) {
		toSerialize["invoice_status_note"] = o.InvoiceStatusNote
	}
	return toSerialize, nil
}

type NullableInvoiceStatusResponse struct {
	value *InvoiceStatusResponse
	isSet bool
}

func (v NullableInvoiceStatusResponse) Get() *InvoiceStatusResponse {
	return v.value
}

func (v *NullableInvoiceStatusResponse) Set(val *InvoiceStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceStatusResponse(val *InvoiceStatusResponse) *NullableInvoiceStatusResponse {
	return &NullableInvoiceStatusResponse{value: val, isSet: true}
}

func (v NullableInvoiceStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


