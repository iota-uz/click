/*
CLICK-PASS-API

API for managing payments and fiscalization with CLICK Pass.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clickapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TokenPaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenPaymentRequest{}

// TokenPaymentRequest struct for TokenPaymentRequest
type TokenPaymentRequest struct {
	// Service ID
	ServiceId int64 `json:"service_id"`
	// Card token
	CardToken string `json:"card_token"`
	// Payment amount
	Amount float32 `json:"amount"`
	// Merchant transaction ID
	TransactionParameter string `json:"transaction_parameter"`
}

type _TokenPaymentRequest TokenPaymentRequest

// NewTokenPaymentRequest instantiates a new TokenPaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenPaymentRequest(serviceId int64, cardToken string, amount float32, transactionParameter string) *TokenPaymentRequest {
	this := TokenPaymentRequest{}
	this.ServiceId = serviceId
	this.CardToken = cardToken
	this.Amount = amount
	this.TransactionParameter = transactionParameter
	return &this
}

// NewTokenPaymentRequestWithDefaults instantiates a new TokenPaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenPaymentRequestWithDefaults() *TokenPaymentRequest {
	this := TokenPaymentRequest{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *TokenPaymentRequest) GetServiceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *TokenPaymentRequest) GetServiceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *TokenPaymentRequest) SetServiceId(v int64) {
	o.ServiceId = v
}

// GetCardToken returns the CardToken field value
func (o *TokenPaymentRequest) GetCardToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value
// and a boolean to check if the value has been set.
func (o *TokenPaymentRequest) GetCardTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardToken, true
}

// SetCardToken sets field value
func (o *TokenPaymentRequest) SetCardToken(v string) {
	o.CardToken = v
}

// GetAmount returns the Amount field value
func (o *TokenPaymentRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TokenPaymentRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TokenPaymentRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetTransactionParameter returns the TransactionParameter field value
func (o *TokenPaymentRequest) GetTransactionParameter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionParameter
}

// GetTransactionParameterOk returns a tuple with the TransactionParameter field value
// and a boolean to check if the value has been set.
func (o *TokenPaymentRequest) GetTransactionParameterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionParameter, true
}

// SetTransactionParameter sets field value
func (o *TokenPaymentRequest) SetTransactionParameter(v string) {
	o.TransactionParameter = v
}

func (o TokenPaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenPaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service_id"] = o.ServiceId
	toSerialize["card_token"] = o.CardToken
	toSerialize["amount"] = o.Amount
	toSerialize["transaction_parameter"] = o.TransactionParameter
	return toSerialize, nil
}

func (o *TokenPaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service_id",
		"card_token",
		"amount",
		"transaction_parameter",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenPaymentRequest := _TokenPaymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTokenPaymentRequest)

	if err != nil {
		return err
	}

	*o = TokenPaymentRequest(varTokenPaymentRequest)

	return err
}

type NullableTokenPaymentRequest struct {
	value *TokenPaymentRequest
	isSet bool
}

func (v NullableTokenPaymentRequest) Get() *TokenPaymentRequest {
	return v.value
}

func (v *NullableTokenPaymentRequest) Set(val *TokenPaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenPaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenPaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenPaymentRequest(val *TokenPaymentRequest) *NullableTokenPaymentRequest {
	return &NullableTokenPaymentRequest{value: val, isSet: true}
}

func (v NullableTokenPaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenPaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


