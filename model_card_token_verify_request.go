/*
CLICK-PASS-API

API for managing payments and fiscalization with CLICK Pass.

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clickapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CardTokenVerifyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardTokenVerifyRequest{}

// CardTokenVerifyRequest struct for CardTokenVerifyRequest
type CardTokenVerifyRequest struct {
	// Service ID
	ServiceId int64 `json:"service_id" xml:"service_id"`
	// Card token
	CardToken string `json:"card_token" xml:"card_token"`
	// Received SMS code
	SmsCode int32 `json:"sms_code" xml:"sms_code"`
}

type _CardTokenVerifyRequest CardTokenVerifyRequest

// NewCardTokenVerifyRequest instantiates a new CardTokenVerifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardTokenVerifyRequest(serviceId int64, cardToken string, smsCode int32) *CardTokenVerifyRequest {
	this := CardTokenVerifyRequest{}
	this.ServiceId = serviceId
	this.CardToken = cardToken
	this.SmsCode = smsCode
	return &this
}

// NewCardTokenVerifyRequestWithDefaults instantiates a new CardTokenVerifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardTokenVerifyRequestWithDefaults() *CardTokenVerifyRequest {
	this := CardTokenVerifyRequest{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *CardTokenVerifyRequest) GetServiceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CardTokenVerifyRequest) GetServiceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CardTokenVerifyRequest) SetServiceId(v int64) {
	o.ServiceId = v
}

// GetCardToken returns the CardToken field value
func (o *CardTokenVerifyRequest) GetCardToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value
// and a boolean to check if the value has been set.
func (o *CardTokenVerifyRequest) GetCardTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardToken, true
}

// SetCardToken sets field value
func (o *CardTokenVerifyRequest) SetCardToken(v string) {
	o.CardToken = v
}

// GetSmsCode returns the SmsCode field value
func (o *CardTokenVerifyRequest) GetSmsCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SmsCode
}

// GetSmsCodeOk returns a tuple with the SmsCode field value
// and a boolean to check if the value has been set.
func (o *CardTokenVerifyRequest) GetSmsCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmsCode, true
}

// SetSmsCode sets field value
func (o *CardTokenVerifyRequest) SetSmsCode(v int32) {
	o.SmsCode = v
}

func (o CardTokenVerifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardTokenVerifyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service_id"] = o.ServiceId
	toSerialize["card_token"] = o.CardToken
	toSerialize["sms_code"] = o.SmsCode
	return toSerialize, nil
}

func (o *CardTokenVerifyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service_id",
		"card_token",
		"sms_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCardTokenVerifyRequest := _CardTokenVerifyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCardTokenVerifyRequest)

	if err != nil {
		return err
	}

	*o = CardTokenVerifyRequest(varCardTokenVerifyRequest)

	return err
}

type NullableCardTokenVerifyRequest struct {
	value *CardTokenVerifyRequest
	isSet bool
}

func (v NullableCardTokenVerifyRequest) Get() *CardTokenVerifyRequest {
	return v.value
}

func (v *NullableCardTokenVerifyRequest) Set(val *CardTokenVerifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCardTokenVerifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCardTokenVerifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardTokenVerifyRequest(val *CardTokenVerifyRequest) *NullableCardTokenVerifyRequest {
	return &NullableCardTokenVerifyRequest{value: val, isSet: true}
}

func (v NullableCardTokenVerifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardTokenVerifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


