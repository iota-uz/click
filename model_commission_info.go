/*
CLICK-PASS-API

API for managing payments and fiscalization with CLICK Pass.

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clickapi

import (
	"encoding/json"
)

// checks if the CommissionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommissionInfo{}

// CommissionInfo struct for CommissionInfo
type CommissionInfo struct {
	// TIN
	TIN *string `json:"TIN,omitempty" xml:"TIN"`
	// PINFL
	PINFL *string `json:"PINFL,omitempty" xml:"PINFL"`
}

// NewCommissionInfo instantiates a new CommissionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommissionInfo() *CommissionInfo {
	this := CommissionInfo{}
	return &this
}

// NewCommissionInfoWithDefaults instantiates a new CommissionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommissionInfoWithDefaults() *CommissionInfo {
	this := CommissionInfo{}
	return &this
}

// GetTIN returns the TIN field value if set, zero value otherwise.
func (o *CommissionInfo) GetTIN() string {
	if o == nil || IsNil(o.TIN) {
		var ret string
		return ret
	}
	return *o.TIN
}

// GetTINOk returns a tuple with the TIN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionInfo) GetTINOk() (*string, bool) {
	if o == nil || IsNil(o.TIN) {
		return nil, false
	}
	return o.TIN, true
}

// HasTIN returns a boolean if a field has been set.
func (o *CommissionInfo) HasTIN() bool {
	if o != nil && !IsNil(o.TIN) {
		return true
	}

	return false
}

// SetTIN gets a reference to the given string and assigns it to the TIN field.
func (o *CommissionInfo) SetTIN(v string) {
	o.TIN = &v
}

// GetPINFL returns the PINFL field value if set, zero value otherwise.
func (o *CommissionInfo) GetPINFL() string {
	if o == nil || IsNil(o.PINFL) {
		var ret string
		return ret
	}
	return *o.PINFL
}

// GetPINFLOk returns a tuple with the PINFL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionInfo) GetPINFLOk() (*string, bool) {
	if o == nil || IsNil(o.PINFL) {
		return nil, false
	}
	return o.PINFL, true
}

// HasPINFL returns a boolean if a field has been set.
func (o *CommissionInfo) HasPINFL() bool {
	if o != nil && !IsNil(o.PINFL) {
		return true
	}

	return false
}

// SetPINFL gets a reference to the given string and assigns it to the PINFL field.
func (o *CommissionInfo) SetPINFL(v string) {
	o.PINFL = &v
}

func (o CommissionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommissionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TIN) {
		toSerialize["TIN"] = o.TIN
	}
	if !IsNil(o.PINFL) {
		toSerialize["PINFL"] = o.PINFL
	}
	return toSerialize, nil
}

type NullableCommissionInfo struct {
	value *CommissionInfo
	isSet bool
}

func (v NullableCommissionInfo) Get() *CommissionInfo {
	return v.value
}

func (v *NullableCommissionInfo) Set(val *CommissionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCommissionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCommissionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommissionInfo(val *CommissionInfo) *NullableCommissionInfo {
	return &NullableCommissionInfo{value: val, isSet: true}
}

func (v NullableCommissionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommissionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


