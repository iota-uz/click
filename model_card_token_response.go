/*
CLICK-PASS-API

API for managing payments and fiscalization with CLICK Pass.

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clickapi

import (
	"encoding/json"
)

// checks if the CardTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardTokenResponse{}

// CardTokenResponse struct for CardTokenResponse
type CardTokenResponse struct {
	// Error code
	ErrorCode *int32 `form:"error_code" json:"error_code,omitempty"` // Error code
	// Error description
	ErrorNote *string `form:"error_note" json:"error_note,omitempty"` // Error description
	// Card token
	CardToken *string `form:"card_token" json:"card_token,omitempty"` // Card token
	// User phone number
	PhoneNumber *string `form:"phone_number" json:"phone_number,omitempty"` // User phone number
	// Type of created token
	Temporary *int32 `form:"temporary" json:"temporary,omitempty"` // Type of created token
}

// NewCardTokenResponse instantiates a new CardTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardTokenResponse() *CardTokenResponse {
	this := CardTokenResponse{}
	return &this
}

// NewCardTokenResponseWithDefaults instantiates a new CardTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardTokenResponseWithDefaults() *CardTokenResponse {
	this := CardTokenResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *CardTokenResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTokenResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *CardTokenResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *CardTokenResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorNote returns the ErrorNote field value if set, zero value otherwise.
func (o *CardTokenResponse) GetErrorNote() string {
	if o == nil || IsNil(o.ErrorNote) {
		var ret string
		return ret
	}
	return *o.ErrorNote
}

// GetErrorNoteOk returns a tuple with the ErrorNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTokenResponse) GetErrorNoteOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorNote) {
		return nil, false
	}
	return o.ErrorNote, true
}

// HasErrorNote returns a boolean if a field has been set.
func (o *CardTokenResponse) HasErrorNote() bool {
	if o != nil && !IsNil(o.ErrorNote) {
		return true
	}

	return false
}

// SetErrorNote gets a reference to the given string and assigns it to the ErrorNote field.
func (o *CardTokenResponse) SetErrorNote(v string) {
	o.ErrorNote = &v
}

// GetCardToken returns the CardToken field value if set, zero value otherwise.
func (o *CardTokenResponse) GetCardToken() string {
	if o == nil || IsNil(o.CardToken) {
		var ret string
		return ret
	}
	return *o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTokenResponse) GetCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CardToken) {
		return nil, false
	}
	return o.CardToken, true
}

// HasCardToken returns a boolean if a field has been set.
func (o *CardTokenResponse) HasCardToken() bool {
	if o != nil && !IsNil(o.CardToken) {
		return true
	}

	return false
}

// SetCardToken gets a reference to the given string and assigns it to the CardToken field.
func (o *CardTokenResponse) SetCardToken(v string) {
	o.CardToken = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CardTokenResponse) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTokenResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CardTokenResponse) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CardTokenResponse) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetTemporary returns the Temporary field value if set, zero value otherwise.
func (o *CardTokenResponse) GetTemporary() int32 {
	if o == nil || IsNil(o.Temporary) {
		var ret int32
		return ret
	}
	return *o.Temporary
}

// GetTemporaryOk returns a tuple with the Temporary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTokenResponse) GetTemporaryOk() (*int32, bool) {
	if o == nil || IsNil(o.Temporary) {
		return nil, false
	}
	return o.Temporary, true
}

// HasTemporary returns a boolean if a field has been set.
func (o *CardTokenResponse) HasTemporary() bool {
	if o != nil && !IsNil(o.Temporary) {
		return true
	}

	return false
}

// SetTemporary gets a reference to the given int32 and assigns it to the Temporary field.
func (o *CardTokenResponse) SetTemporary(v int32) {
	o.Temporary = &v
}

func (o CardTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.ErrorNote) {
		toSerialize["error_note"] = o.ErrorNote
	}
	if !IsNil(o.CardToken) {
		toSerialize["card_token"] = o.CardToken
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Temporary) {
		toSerialize["temporary"] = o.Temporary
	}
	return toSerialize, nil
}

type NullableCardTokenResponse struct {
	value *CardTokenResponse
	isSet bool
}

func (v NullableCardTokenResponse) Get() *CardTokenResponse {
	return v.value
}

func (v *NullableCardTokenResponse) Set(val *CardTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardTokenResponse(val *CardTokenResponse) *NullableCardTokenResponse {
	return &NullableCardTokenResponse{value: val, isSet: true}
}

func (v NullableCardTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
